
interface Issuer {
  getLabel() -> (Object);
  getAssay() -> (Assay);
  makeAmount(quantity:Quantity) -> (Purse);
  makeEmptyPurse(name:String) -> (Purse);
  getExclusive(amount:Amount, src:Purse, name:String) -> (Payment);
  getExclusiveAll(src:Purse, name:String) -> (Payment);
  burn(amount:Amount, src:Payment);
  burnAll(src:Payment);
}

interface Mint {
  getIssuer() -> (Issuer);
  mint(initialBalance:Amount, name:String) -> (Purse);
  destroyAll();
  destroy(amount:Amount);
  revoke(amount:Amount) -> Purse;
}

interface Payment {
  getIssuer() ::Issuer;
  getXferBalance() ::Amount;
}

interface Purse extends (Payment) {
  getIssuer() ::Issuer;
  getXferBalance() ::Amount;
  getUseBalance() ::Amount;
  deposit(amount ?Amount, srcPaymentP ?reveal[Promise]) ::Amount;
  withdraw(amount ?Amount, name ?String) ::Purse;
}


